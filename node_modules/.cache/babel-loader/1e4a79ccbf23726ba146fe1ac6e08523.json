{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\DragDrop\\\\src\\\\AddMyTrello\\\\Board.jsx\";\nimport React from 'react';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  // console.log('Board', props);\n  let board = props.board;\n  let currentBoard = props.currentBoard;\n  let setCurrentBoard = props.setCurrentBoard;\n  let cureentItem = props.cureentItem;\n  let boards = props.boards;\n  let setBoards = props.setBoards;\n\n  function dropCardHandler(e, board) {\n    board.items.push(cureentItem);\n    const currentIndex = currentBoard.items.indexOf(cureentItem); // console.log('board', board, 'cureentItem', cureentItem, 'currentBoard', currentBoard);\n    // console.log(currentIndex);\n\n    currentBoard.items.splice(currentIndex, 1);\n    setBoards(boards.map(b => {\n      if (b.id === board.id) {\n        return board;\n      }\n\n      if (b.id === currentBoard.id) {\n        return currentBoard;\n      }\n\n      return b;\n    }));\n    e.target.style.boxShadow = 'none';\n  }\n\n  function dragOverHandler(e) {\n    e.preventDefault();\n\n    if (e.target.className === \"item\") {\n      e.target.style.boxShadow = '0 5px 3px #673ab7 ';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    onDragOver: e => {\n      dragOverHandler(e);\n    } // onDrop={(e) => { dropCardHandler(e, board) }}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board_title\",\n      children: board.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Item","Board","props","board","currentBoard","setCurrentBoard","cureentItem","boards","setBoards","dropCardHandler","e","items","push","currentIndex","indexOf","splice","map","b","id","target","style","boxShadow","dragOverHandler","preventDefault","className","title"],"sources":["E:/REACT/DragDrop/src/AddMyTrello/Board.jsx"],"sourcesContent":["import React from 'react'\r\nimport Item from './Item'\r\n\r\nconst Board = (props) => {\r\n\r\n    // console.log('Board', props);\r\n\r\n    let board = props.board\r\n    let currentBoard = props.currentBoard\r\n    let setCurrentBoard = props.setCurrentBoard\r\n\r\n    let cureentItem = props.cureentItem\r\n\r\n    let boards = props.boards\r\n    let setBoards = props.setBoards\r\n\r\n\r\n\r\n    function dropCardHandler(e, board) {\r\n\r\n        board.items.push(cureentItem)\r\n        const currentIndex = currentBoard.items.indexOf(cureentItem)\r\n        // console.log('board', board, 'cureentItem', cureentItem, 'currentBoard', currentBoard);\r\n        // console.log(currentIndex);\r\n        currentBoard.items.splice(currentIndex, 1)\r\n        setBoards(boards.map(b => {\r\n            if (b.id === board.id) {\r\n                return board\r\n            }\r\n            if (b.id === currentBoard.id) {\r\n                return currentBoard\r\n            }\r\n            return b\r\n        }\r\n        ))\r\n        e.target.style.boxShadow = 'none'\r\n    }\r\n\r\n    function dragOverHandler(e) {\r\n        e.preventDefault()\r\n        if (e.target.className === \"item\") {\r\n            e.target.style.boxShadow = '0 5px 3px #673ab7 '\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='board'\r\n            onDragOver={(e) => { dragOverHandler(e) }}\r\n        // onDrop={(e) => { dropCardHandler(e, board) }}\r\n        >\r\n            <div className=\"board_title\">{board.title}</div>\r\n\r\n            {<Item\r\n                props={props}\r\n\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAErB;EAEA,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;EACA,IAAIC,YAAY,GAAGF,KAAK,CAACE,YAAzB;EACA,IAAIC,eAAe,GAAGH,KAAK,CAACG,eAA5B;EAEA,IAAIC,WAAW,GAAGJ,KAAK,CAACI,WAAxB;EAEA,IAAIC,MAAM,GAAGL,KAAK,CAACK,MAAnB;EACA,IAAIC,SAAS,GAAGN,KAAK,CAACM,SAAtB;;EAIA,SAASC,eAAT,CAAyBC,CAAzB,EAA4BP,KAA5B,EAAmC;IAE/BA,KAAK,CAACQ,KAAN,CAAYC,IAAZ,CAAiBN,WAAjB;IACA,MAAMO,YAAY,GAAGT,YAAY,CAACO,KAAb,CAAmBG,OAAnB,CAA2BR,WAA3B,CAArB,CAH+B,CAI/B;IACA;;IACAF,YAAY,CAACO,KAAb,CAAmBI,MAAnB,CAA0BF,YAA1B,EAAwC,CAAxC;IACAL,SAAS,CAACD,MAAM,CAACS,GAAP,CAAWC,CAAC,IAAI;MACtB,IAAIA,CAAC,CAACC,EAAF,KAASf,KAAK,CAACe,EAAnB,EAAuB;QACnB,OAAOf,KAAP;MACH;;MACD,IAAIc,CAAC,CAACC,EAAF,KAASd,YAAY,CAACc,EAA1B,EAA8B;QAC1B,OAAOd,YAAP;MACH;;MACD,OAAOa,CAAP;IACH,CARS,CAAD,CAAT;IAUAP,CAAC,CAACS,MAAF,CAASC,KAAT,CAAeC,SAAf,GAA2B,MAA3B;EACH;;EAED,SAASC,eAAT,CAAyBZ,CAAzB,EAA4B;IACxBA,CAAC,CAACa,cAAF;;IACA,IAAIb,CAAC,CAACS,MAAF,CAASK,SAAT,KAAuB,MAA3B,EAAmC;MAC/Bd,CAAC,CAACS,MAAF,CAASC,KAAT,CAAeC,SAAf,GAA2B,oBAA3B;IACH;EACJ;;EAED,oBACI;IACI,SAAS,EAAC,OADd;IAEI,UAAU,EAAGX,CAAD,IAAO;MAAEY,eAAe,CAACZ,CAAD,CAAf;IAAoB,CAF7C,CAGA;IAHA;IAAA,wBAKI;MAAK,SAAS,EAAC,aAAf;MAAA,UAA8BP,KAAK,CAACsB;IAApC;MAAA;MAAA;MAAA;IAAA,QALJ,eAOK,QAAC,IAAD;MACG,KAAK,EAAEvB;IADV;MAAA;MAAA;MAAA;IAAA,QAPL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAxDD;;KAAMD,K;AA0DN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}