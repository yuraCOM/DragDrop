{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\DragDrop\\\\src\\\\AddMyTrello\\\\AddMyTrello.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Board from './Board';\nimport './AddMyTrelloStyle.css'; // import '../bootstrap.min.css'\n\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\nimport Nav from './Nav';\nimport { randomN } from './Tools';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddMyTrello = () => {\n  _s();\n\n  const [boards, setBoards] = useState([]);\n  const [newColorOfBoard, setNewColorOfBoard] = useState(null);\n  const [currentBoard, setCurrentBoard] = useState(null);\n  const [cureentItem, setCureentItem] = useState(null);\n  const [key, setKey] = useState(randomN);\n  useEffect(() => {\n    let dataStore = () => {\n      if (localStorage.boards) {\n        return JSON.parse(localStorage.getItem('boards'));\n      } else {\n        return [{\n          id: 10,\n          title: \"Сделать (пример)\",\n          background: 'primary',\n          items: [{\n            id: 1,\n            title: \"Пойти в магазин\"\n          }, {\n            id: 2,\n            title: \"Пойти в спортзал\"\n          }, {\n            id: 3,\n            title: \"Покормить кота\"\n          }]\n        }, {\n          id: 20,\n          title: \"Проверить (пример)\",\n          background: 'success',\n          items: [{\n            id: 4,\n            title: \"Проверить уроки\"\n          }, {\n            id: 5,\n            title: \"Задачи по математике\"\n          }, {\n            id: 6,\n            title: \"Коммунальные платежи\"\n          }]\n        }, {\n          id: 30,\n          title: \"Сделано (пример)\",\n          background: 'warning',\n          items: [{\n            id: 7,\n            title: \"Поменять резину\"\n          }, {\n            id: 8,\n            title: \"Приготовить ужин\"\n          }, {\n            id: 9,\n            title: \"Постирать вещи\"\n          }]\n        }];\n      }\n    };\n\n    setBoards(dataStore);\n  }, [dataStore]);\n  useEffect(() => {\n    let data = JSON.stringify(boards);\n    localStorage.setItem('boards', data);\n    setKey(randomN());\n  }, [boards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      boards: boards,\n      setBoards: setBoards,\n      newColorOfBoard: newColorOfBoard,\n      setNewColorOfBoard: setNewColorOfBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appTrello\",\n      children: [boards.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0434\\u043E\\u0441\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 40\n      }, this) : false, boards.map((board, index) => /*#__PURE__*/_jsxDEV(Board, {\n        board: board,\n        index: index,\n        currentBoard: currentBoard,\n        setCurrentBoard: setCurrentBoard,\n        cureentItem: cureentItem,\n        setCureentItem: setCureentItem,\n        boards: boards,\n        setBoards: setBoards,\n        newColorOfBoard: newColorOfBoard\n      }, index + 'Board', false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddMyTrello, \"b0rptyc0Z4x3QwftUAlGzrllBrM=\");\n\n_c = AddMyTrello;\nexport default AddMyTrello; //https://www.youtube.com/watch?v=RPtDuVba1XQ&list=PL6DxKON1uLOENy8yYgn0uLwB6p8eAW9NZ&index=4\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMyTrello\");","map":{"version":3,"names":["React","useEffect","useState","Board","Nav","randomN","AddMyTrello","boards","setBoards","newColorOfBoard","setNewColorOfBoard","currentBoard","setCurrentBoard","cureentItem","setCureentItem","key","setKey","dataStore","localStorage","JSON","parse","getItem","id","title","background","items","data","stringify","setItem","length","map","board","index"],"sources":["E:/REACT/DragDrop/src/AddMyTrello/AddMyTrello.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Board from './Board'\r\nimport './AddMyTrelloStyle.css'\r\n// import '../bootstrap.min.css'\r\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\r\nimport Nav from './Nav'\r\nimport { randomN } from './Tools';\r\n\r\nconst AddMyTrello = () => {\r\n\r\n\r\n\r\n\r\n    const [boards, setBoards] = useState([])\r\n\r\n    const [newColorOfBoard, setNewColorOfBoard] = useState(null)\r\n    const [currentBoard, setCurrentBoard] = useState(null)\r\n    const [cureentItem, setCureentItem] = useState(null)\r\n\r\n    const [key, setKey] = useState(randomN)\r\n\r\n    useEffect(() => {\r\n        let dataStore = () => {\r\n            if (localStorage.boards) {\r\n                return JSON.parse(localStorage.getItem('boards'))\r\n            } else {\r\n                return [\r\n                    { id: 10, title: \"Сделать (пример)\", background: 'primary', items: [{ id: 1, title: \"Пойти в магазин\" }, { id: 2, title: \"Пойти в спортзал\" }, { id: 3, title: \"Покормить кота\" }] },\r\n                    { id: 20, title: \"Проверить (пример)\", background: 'success', items: [{ id: 4, title: \"Проверить уроки\" }, { id: 5, title: \"Задачи по математике\" }, { id: 6, title: \"Коммунальные платежи\" }] },\r\n                    { id: 30, title: \"Сделано (пример)\", background: 'warning', items: [{ id: 7, title: \"Поменять резину\" }, { id: 8, title: \"Приготовить ужин\" }, { id: 9, title: \"Постирать вещи\" }] },\r\n\r\n                ]\r\n            }\r\n\r\n        }\r\n\r\n\r\n        setBoards(dataStore)\r\n\r\n    }, [dataStore])\r\n\r\n\r\n    useEffect(() => {\r\n        let data = JSON.stringify(boards);\r\n        localStorage.setItem('boards', data);\r\n        setKey(randomN())\r\n\r\n    }, [boards])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* changeBoards={changeBoards} */}\r\n            <Nav boards={boards} setBoards={setBoards}\r\n                newColorOfBoard={newColorOfBoard} setNewColorOfBoard={setNewColorOfBoard}\r\n            ></Nav>\r\n\r\n            <div key={key} className='appTrello'>\r\n\r\n                {boards.length === 0 ? <h1>Добавьте доску</h1> : false}\r\n\r\n                {boards.map((board, index) =>\r\n                    <Board\r\n                        key={index + 'Board'}\r\n                        board={board}\r\n                        index={index}\r\n                        currentBoard={currentBoard}\r\n                        setCurrentBoard={setCurrentBoard}\r\n                        cureentItem={cureentItem}\r\n                        setCureentItem={setCureentItem}\r\n                        boards={boards}\r\n                        setBoards={setBoards}\r\n                        newColorOfBoard={newColorOfBoard}\r\n                    >\r\n                    </Board>)}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AddMyTrello\r\n\r\n\r\n//https://www.youtube.com/watch?v=RPtDuVba1XQ&list=PL6DxKON1uLOENy8yYgn0uLwB6p8eAW9NZ&index=4\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}